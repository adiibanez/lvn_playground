%{"opacity(attr(\"opacity\"))" => [{:opacity, [], [{:__attr__, [], "opacity"}]}], "scrollPosition(id: attr(\"scroll-position\"), anchor: .top)" => [{:scrollPosition, [], [[id: {:__attr__, [], "scroll-position"}, anchor: {:., [], [nil, :top]}]]}], "aspectRatio(1, contentMode: .fill)" => [{:aspectRatio, [], [1, [contentMode: {:., [], [nil, :fill]}]]}], "fill(.linearGradient(colors: [.black.opacity(0), .black], startPoint: .top, endPoint: .bottom))" => [{:fill, [], [{:., [], [nil, {:linearGradient, [], [[colors: [{:., [], [nil, {:., [], [:black, {:opacity, [], [0]}]}]}, {:., [], [nil, :black]}], startPoint: {:., [], [nil, :top]}, endPoint: {:., [], [nil, :bottom]}]]}]}]}], "presentationBackgroundInteraction(.enabled)" => [{:presentationBackgroundInteraction, [], [{:., [], [nil, :enabled]}]}], "simultaneousGesture(RotateGesture().updating(:rotate))" => [{:simultaneousGesture, [], [{:., [], [{:RotateGesture, [], []}, {:updating, [], [:rotate]}]}]}], "fullScreenCover(isPresented: attr(\"isPresented\"), content: :overlay)" => [{:fullScreenCover, [], [[isPresented: {:__attr__, [], "isPresented"}, content: :overlay]]}], "background(.bar)" => [{:background, [], [{:., [], [nil, :bar]}]}], "frame(width: 24, height: 24)" => [{:frame, [], [[width: 24, height: 24]]}], "foregroundStyle(.white)" => [{:foregroundStyle, [], [{:., [], [nil, :white]}]}], "presentationBackground(.background)" => [{:presentationBackground, [], [{:., [], [nil, :background]}]}], "controlSize(.extraLarge)" => [{:controlSize, [], [{:., [], [nil, :extraLarge]}]}], "defaultScrollAnchor(.bottom)" => [{:defaultScrollAnchor, [], [{:., [], [nil, :bottom]}]}], "padding(.top)" => [{:padding, [], [{:., [], [nil, :top]}]}], "font(.largeTitle)" => [{:font, [], [{:., [], [nil, :largeTitle]}]}], "buttonStyle(.borderless)" => [{:buttonStyle, [], [{:., [], [nil, :borderless]}]}], "multilineTextAlignment(.leading)" => [{:multilineTextAlignment, [], [{:., [], [nil, :leading]}]}], "containerRelativeFrame(.horizontal, count: attr(\"count\"), span: 1, spacing: 8)" => [{:containerRelativeFrame, [], [{:., [], [nil, :horizontal]}, [count: {:__attr__, [], "count"}, span: 1, spacing: 8]]}], "listSectionSpacing(0)" => [{:listSectionSpacing, [], [0]}], "onSubmit(of: .search, action: event(\"search\"))" => [{:onSubmit, [], [[of: {:., [], [nil, :search]}, action: {:__event__, [], ["search"]}]]}], "listRowBackground(:empty)" => [{:listRowBackground, [], [:empty]}], "animation(.bouncy, value: gesture_state(:magnify, .magnification))" => [{:animation, [], [{:., [], [nil, :bouncy]}, [value: {:__gesture_state__, [], [:magnify, {:., [], [nil, :magnification]}]}]]}], "ignoresSafeArea()" => [{:ignoresSafeArea, [], []}], "tint(Color(hue: attr(\"hue\"), saturation: 0.75, brightness: 0.9))" => [{:tint, [], [{:Color, [], [[hue: {:__attr__, [], "hue"}, saturation: 0.75, brightness: 0.9]]}]}], "imageScale(.large)" => [{:imageScale, [], [{:., [], [nil, :large]}]}], "frame(width: 200)" => [{:frame, [], [[width: 200]]}], "tint(.white)" => [{:tint, [], [{:., [], [nil, :white]}]}], "background(.red, in: .circle)" => [{:background, [], [{:., [], [nil, :red]}, [in: {:., [], [nil, :circle]}]]}], "simultaneousGesture(MagnifyGesture().updating(:magnify))" => [{:simultaneousGesture, [], [{:., [], [{:MagnifyGesture, [], []}, {:updating, [], [:magnify]}]}]}], "clipShape(.rect(cornerRadius: 8, style: .continuous))" => [{:clipShape, [], [{:., [], [nil, {:rect, [], [[cornerRadius: 8, style: {:., [], [nil, :continuous]}]]}]}]}], "background(Color(hue: attr(\"hue\"), saturation: 0.75, brightness: 0.85), in: .rect(cornerRadius: 10, style: .continuous))" => [{:background, [], [{:Color, [], [[hue: {:__attr__, [], "hue"}, saturation: 0.75, brightness: 0.85]]}, [in: {:., [], [nil, {:rect, [], [[cornerRadius: 10, style: {:., [], [nil, :continuous]}]]}]}]]}], "foregroundStyle(.tertiary)" => [{:foregroundStyle, [], [{:., [], [nil, :tertiary]}]}], "scrollTargetLayout()" => [{:scrollTargetLayout, [], []}], "navigationTitle(attr(\"title\"))" => [{:navigationTitle, [], [{:__attr__, [], "title"}]}], "font(.subheadline)" => [{:font, [], [{:., [], [nil, :subheadline]}]}], "alert(attr(\"title\"), isPresented: attr(\"presented\"), actions: :actions, message: :message)" => [{:alert, [], [{:__attr__, [], "title"}, [isPresented: {:__attr__, [], "presented"}, actions: :actions, message: :message]]}], "rotationEffect(gesture_state(:rotate, .rotation, defaultValue: .zero), anchor: gesture_state(:rotate, .startAnchor, defaultValue: .center))" => [{:rotationEffect, [], [{:__gesture_state__, [], [:rotate, {:., [], [nil, :rotation]}, [defaultValue: {:., [], [nil, :zero]}]]}, [anchor: {:__gesture_state__, [], [:rotate, {:., [], [nil, :startAnchor]}, [defaultValue: {:., [], [nil, :center]}]]}]]}], "safeAreaInset(edge: .bottom, content: :hint)" => [{:safeAreaInset, [], [[edge: {:., [], [nil, :bottom]}, content: :hint]]}], "frame(minHeight: 200)" => [{:frame, [], [[minHeight: 200]]}], "background(.bar, in: .circle)" => [{:background, [], [{:., [], [nil, :bar]}, [in: {:., [], [nil, :circle]}]]}], "animation(.bouncy, value: gesture_state(:rotate, .rotation.radians))" => [{:animation, [], [{:., [], [nil, :bouncy]}, [value: {:__gesture_state__, [], [:rotate, {:., [], [nil, {:., [], [:rotation, :radians]}]}]}]]}], "glassBackgroundEffect()" => [{:glassBackgroundEffect, [], []}], "aspectRatio(1, contentMode: .fit)" => [{:aspectRatio, [], [1, [contentMode: {:., [], [nil, :fit]}]]}], "foregroundStyle(.tint)" => [{:foregroundStyle, [], [{:., [], [nil, :tint]}]}], "padding(.trailing, 32)" => [{:padding, [], [{:., [], [nil, :trailing]}, 32]}], "safeAreaPadding()" => [{:safeAreaPadding, [], []}], "navigationTitle(\"Maps\")" => [{:navigationTitle, [], ["Maps"]}], "padding()" => [{:padding, [], []}], "foregroundStyle(.black)" => [{:foregroundStyle, [], [{:., [], [nil, :black]}]}], "font(.footnote)" => [{:font, [], [{:., [], [nil, :footnote]}]}], "padding(4)" => [{:padding, [], [4]}], "progressViewStyle(.linear)" => [{:progressViewStyle, [], [{:., [], [nil, :linear]}]}], "animation(.default, value: attr(\"value\"))" => [{:animation, [], [{:., [], [nil, :default]}, [value: {:__attr__, [], "value"}]]}], "fill(.thinMaterial)" => [{:fill, [], [{:., [], [nil, :thinMaterial]}]}], "foregroundStyle(.quinary)" => [{:foregroundStyle, [], [{:., [], [nil, :quinary]}]}], "buttonStyle(.borderedProminent)" => [{:buttonStyle, [], [{:., [], [nil, :borderedProminent]}]}], "navigationSubtitle(:subtitle)" => [{:navigationSubtitle, [], [:subtitle]}], "padding(.vertical, attr(\"padding\"))" => [{:padding, [], [{:., [], [nil, :vertical]}, {:__attr__, [], "padding"}]}], "animation(.snappy, value: attr(\"scroll-position\"))" => [{:animation, [], [{:., [], [nil, :snappy]}, [value: {:__attr__, [], "scroll-position"}]]}], "fill(.blue)" => [{:fill, [], [{:., [], [nil, :blue]}]}], "safeAreaInset(edge: .leading, content: :leading_actions)" => [{:safeAreaInset, [], [[edge: {:., [], [nil, :leading]}, content: :leading_actions]]}], "interactiveDismissDisabled()" => [{:interactiveDismissDisabled, [], []}], "background(content: :background)" => [{:background, [], [[content: :background]]}], "overlay(alignment: .trailing, content: :overlay)" => [{:overlay, [], [[alignment: {:., [], [nil, :trailing]}, content: :overlay]]}], "padding(.vertical, 5)" => [{:padding, [], [{:., [], [nil, :vertical]}, 5]}], "controlSize(.large)" => [{:controlSize, [], [{:., [], [nil, :large]}]}], "foregroundStyle(.ultraThickMaterial)" => [{:foregroundStyle, [], [{:., [], [nil, :ultraThickMaterial]}]}], "animation(.bouncy, value: gesture_state(:drag, .translation.height))" => [{:animation, [], [{:., [], [nil, :bouncy]}, [value: {:__gesture_state__, [], [:drag, {:., [], [nil, {:., [], [:translation, :height]}]}]}]]}], "listStyle(.plain)" => [{:listStyle, [], [{:., [], [nil, :plain]}]}], "listSectionSeparator(.hidden)" => [{:listSectionSeparator, [], [{:., [], [nil, :hidden]}]}], "offset(y: 32)" => [{:offset, [], [[y: 32]]}], "background(.linearGradient(colors: [.blue, .purple], startPoint: .topLeading, endPoint: .bottomTrailing))" => [{:background, [], [{:., [], [nil, {:linearGradient, [], [[colors: [{:., [], [nil, :blue]}, {:., [], [nil, :purple]}], startPoint: {:., [], [nil, :topLeading]}, endPoint: {:., [], [nil, :bottomTrailing]}]]}]}]}], "tabViewStyle(.page)" => [{:tabViewStyle, [], [{:., [], [nil, :page]}]}], "fill(Color(hue: attr(\"hue\"), saturation: 0.75, brightness: 0.9))" => [{:fill, [], [{:Color, [], [[hue: {:__attr__, [], "hue"}, saturation: 0.75, brightness: 0.9]]}]}], "bold(true)" => [{:bold, [], [true]}], "frame(height: 0)" => [{:frame, [], [[height: 0]]}], "font(.headline)" => [{:font, [], [{:., [], [nil, :headline]}]}], "buttonStyle(.automatic)" => [{:buttonStyle, [], [{:., [], [nil, :automatic]}]}], "frame(maxHeight: .infinity)" => [{:frame, [], [[maxHeight: {:., [], [nil, :infinity]}]]}], "scaledToFit()" => [{:scaledToFit, [], []}], "navigationTitle(:title)" => [{:navigationTitle, [], [:title]}], "font(.title3)" => [{:font, [], [{:., [], [nil, :title3]}]}], "listRowInsets(EdgeInsets())" => [{:listRowInsets, [], [{:EdgeInsets, [], []}]}], "gesture(DragGesture().updating(:drag))" => [{:gesture, [], [{:., [], [{:DragGesture, [], []}, {:updating, [], [:drag]}]}]}], "font(.system(size: 60))" => [{:font, [], [{:., [], [nil, {:system, [], [[size: 60]]}]}]}], "navigationTitle(\"Card Row\")" => [{:navigationTitle, [], ["Card Row"]}], "textCase(.uppercase)" => [{:textCase, [], [{:., [], [nil, :uppercase]}]}], "safeAreaInset(edge: .bottom, content: :bottom_bar)" => [{:safeAreaInset, [], [[edge: {:., [], [nil, :bottom]}, content: :bottom_bar]]}], "foregroundStyle(.regularMaterial)" => [{:foregroundStyle, [], [{:., [], [nil, :regularMaterial]}]}], "frame(maxWidth: .infinity, alignment: .leading)" => [{:frame, [], [[maxWidth: {:., [], [nil, :infinity]}, alignment: {:., [], [nil, :leading]}]]}], "tint(.primary)" => [{:tint, [], [{:., [], [nil, :primary]}]}], "font(.title2)" => [{:font, [], [{:., [], [nil, :title2]}]}], "foregroundStyle(Color(hue: attr(\"hue\"), saturation: 1, brightness: 1))" => [{:foregroundStyle, [], [{:Color, [], [[hue: {:__attr__, [], "hue"}, saturation: 1, brightness: 1]]}]}], "containerRelativeFrame(.horizontal, count: attr(\"count\"), span: 1, spacing: 16)" => [{:containerRelativeFrame, [], [{:., [], [nil, :horizontal]}, [count: {:__attr__, [], "count"}, span: 1, spacing: 16]]}], "frame(width: 28, height: 28)" => [{:frame, [], [[width: 28, height: 28]]}], "navigationSubtitle(attr(\"subtitle\"))" => [{:navigationSubtitle, [], [{:__attr__, [], "subtitle"}]}], "lookAroundViewer(isPresented: attr(\"is-presented\"), initialScene: CLLocationCoordinate2D(latitude: 40.730610, longitude: -73.935242))" => [{:lookAroundViewer, [], [[isPresented: {:__attr__, [], "is-presented"}, initialScene: {:CLLocationCoordinate2D, [], [[latitude: 40.73061, longitude: -73.935242]]}]]}], "padding(.horizontal)" => [{:padding, [], [{:., [], [nil, :horizontal]}]}], "sheet(isPresented: attr(\"isPresented\"), content: :playback_bar)" => [{:sheet, [], [[isPresented: {:__attr__, [], "isPresented"}, content: :playback_bar]]}], "padding(.horizontal, 5)" => [{:padding, [], [{:., [], [nil, :horizontal]}, 5]}], "foregroundStyle(.thickMaterial)" => [{:foregroundStyle, [], [{:., [], [nil, :thickMaterial]}]}], "background(.regularMaterial, in: .rect(cornerRadius: 8))" => [{:background, [], [{:., [], [nil, :regularMaterial]}, [in: {:., [], [nil, {:rect, [], [[cornerRadius: 8]]}]}]]}], "sheet(isPresented: attr(\"presented\"), content: :content)" => [{:sheet, [], [[isPresented: {:__attr__, [], "presented"}, content: :content]]}], "background(.quinary, in: .capsule)" => [{:background, [], [{:., [], [nil, :quinary]}, [in: {:., [], [nil, :capsule]}]]}], "ignoresSafeArea(edges: .top)" => [{:ignoresSafeArea, [], [[edges: {:., [], [nil, :top]}]]}], "stroke(.white, lineWidth: 4)" => [{:stroke, [], [{:., [], [nil, :white]}, [lineWidth: 4]]}], "scaledToFill()" => [{:scaledToFill, [], []}], "safeAreaPadding(.leading)" => [{:safeAreaPadding, [], [{:., [], [nil, :leading]}]}], "frame(maxWidth: .infinity, maxHeight: .infinity, alignment: .topLeading)" => [{:frame, [], [[maxWidth: {:., [], [nil, :infinity]}, maxHeight: {:., [], [nil, :infinity]}, alignment: {:., [], [nil, :topLeading]}]]}], "presentationDetents([.height(70), .large])" => [{:presentationDetents, [], [[{:., [], [nil, {:height, [], [70]}]}, {:., [], [nil, :large]}]]}], "navigationBarBackButtonHidden(true)" => [{:navigationBarBackButtonHidden, [], [true]}], "fill(.green)" => [{:fill, [], [{:., [], [nil, :green]}]}], "padding(.vertical, 8)" => [{:padding, [], [{:., [], [nil, :vertical]}, 8]}], "foregroundStyle(.red)" => [{:foregroundStyle, [], [{:., [], [nil, :red]}]}], "frame(maxWidth: 130, maxHeight: 130)" => [{:frame, [], [[maxWidth: 130, maxHeight: 130]]}], "overlay(alignment: .bottomLeading, content: :description)" => [{:overlay, [], [[alignment: {:., [], [nil, :bottomLeading]}, content: :description]]}], "fill(.linearGradient(colors: [.orange, .red], startPoint: .topLeading, endPoint: .bottomTrailing))" => [{:fill, [], [{:., [], [nil, {:linearGradient, [], [[colors: [{:., [], [nil, :orange]}, {:., [], [nil, :red]}], startPoint: {:., [], [nil, :topLeading]}, endPoint: {:., [], [nil, :bottomTrailing]}]]}]}]}], "background(.linearGradient(colors: [.black.opacity(0), .black.opacity(0.5)], startPoint: .top, endPoint: .bottom))" => [{:background, [], [{:., [], [nil, {:linearGradient, [], [[colors: [{:., [], [nil, {:., [], [:black, {:opacity, [], [0]}]}]}, {:., [], [nil, {:., [], [:black, {:opacity, [], [0.5]}]}]}], startPoint: {:., [], [nil, :top]}, endPoint: {:., [], [nil, :bottom]}]]}]}]}], "safeAreaPadding(.horizontal, 32)" => [{:safeAreaPadding, [], [{:., [], [nil, :horizontal]}, 32]}], "scaleEffect(gesture_state(:magnify, .magnification, defaultValue: 1), anchor: gesture_state(:magnify, .startAnchor, defaultValue: .center))" => [{:scaleEffect, [], [{:__gesture_state__, [], [:magnify, {:., [], [nil, :magnification]}, [defaultValue: 1]]}, [anchor: {:__gesture_state__, [], [:magnify, {:., [], [nil, :startAnchor]}, [defaultValue: {:., [], [nil, :center]}]]}]]}], "frame(maxWidth: .infinity, maxHeight: .infinity)" => [{:frame, [], [[maxWidth: {:., [], [nil, :infinity]}, maxHeight: {:., [], [nil, :infinity]}]]}], "navigationTitle(\"Search\")" => [{:navigationTitle, [], ["Search"]}], "toolbarBackground(.hidden, for: .navigationBar)" => [{:toolbarBackground, [], [{:., [], [nil, :hidden]}, [for: {:., [], [nil, :navigationBar]}]]}], "preferredColorScheme(.light)" => [{:preferredColorScheme, [], [{:., [], [nil, :light]}]}], "tabItem(:item)" => [{:tabItem, [], [:item]}], "foregroundStyle(.purple)" => [{:foregroundStyle, [], [{:., [], [nil, :purple]}]}], "presentationBackground(.clear)" => [{:presentationBackground, [], [{:., [], [nil, :clear]}]}], "navigationTitle(\"Cookbook\")" => [{:navigationTitle, [], ["Cookbook"]}], "foregroundStyle(by: .value(\"X\", attr(\"x:value\")))" => [{:foregroundStyle, [], [[by: {:., [], [nil, {:value, [], ["X", {:__attr__, [], "x:value"}]}]}]]}], "hidden()" => [{:hidden, [], []}], "font(.title)" => [{:font, [], [{:., [], [nil, :title]}]}], "safeAreaInset(edge: .top, content: :title)" => [{:safeAreaInset, [], [[edge: {:., [], [nil, :top]}, content: :title]]}], "buttonStyle(.bordereless)" => [{:buttonStyle, [], [{:., [], [nil, :bordereless]}]}], "fontWeight(.bold)" => [{:fontWeight, [], [{:., [], [nil, :bold]}]}], "stroke(.quaternary)" => [{:stroke, [], [{:., [], [nil, :quaternary]}]}], "aspectRatio(1.777, contentMode: .fill)" => [{:aspectRatio, [], [1.777, [contentMode: {:., [], [nil, :fill]}]]}], "toolbar(content: :toolbar)" => [{:toolbar, [], [[content: :toolbar]]}], "aspectRatio(1.777, contentMode: .fit)" => [{:aspectRatio, [], [1.777, [contentMode: {:., [], [nil, :fit]}]]}], "padding(.vertical, 6)" => [{:padding, [], [{:., [], [nil, :vertical]}, 6]}], "safeAreaPadding(.horizontal, 16)" => [{:safeAreaPadding, [], [{:., [], [nil, :horizontal]}, 16]}], "scrollIndicators(.hidden)" => [{:scrollIndicators, [], [{:., [], [nil, :hidden]}]}], "buttonStyle(.plain)" => [{:buttonStyle, [], [{:., [], [nil, :plain]}]}], "resizable()" => [{:resizable, [], []}], "symbolRenderingMode(.hierarchical)" => [{:symbolRenderingMode, [], [{:., [], [nil, :hierarchical]}]}], "font(.caption)" => [{:font, [], [{:., [], [nil, :caption]}]}], "safeAreaInset(edge: .trailing, content: :trailing_actions)" => [{:safeAreaInset, [], [[edge: {:., [], [nil, :trailing]}, content: :trailing_actions]]}], "listRowBackground(:none)" => [{:listRowBackground, [], [:none]}], "background(.regularMaterial, in: .circle)" => [{:background, [], [{:., [], [nil, :regularMaterial]}, [in: {:., [], [nil, :circle]}]]}], "lineLimit(2)" => [{:lineLimit, [], [2]}], "bold()" => [{:bold, [], []}], "fill(.red)" => [{:fill, [], [{:., [], [nil, :red]}]}], "padding(.leading, 10)" => [{:padding, [], [{:., [], [nil, :leading]}, 10]}], "navigationTitle(\"Messages\")" => [{:navigationTitle, [], ["Messages"]}], "background(.bar, in: .rect(cornerRadius: 8))" => [{:background, [], [{:., [], [nil, :bar]}, [in: {:., [], [nil, {:rect, [], [[cornerRadius: 8]]}]}]]}], "frame(width: 100, height: 100)" => [{:frame, [], [[width: 100, height: 100]]}], "animation(.default, value: attr(\"length\"))" => [{:animation, [], [{:., [], [nil, :default]}, [value: {:__attr__, [], "length"}]]}], "foregroundStyle(.white.secondary)" => [{:foregroundStyle, [], [{:., [], [nil, {:., [], [:white, :secondary]}]}]}], "navigationTitle(\"Music\")" => [{:navigationTitle, [], ["Music"]}], "frame(maxWidth: .infinity)" => [{:frame, [], [[maxWidth: {:., [], [nil, :infinity]}]]}], "blur(radius: attr(\"blur\"))" => [{:blur, [], [[radius: {:__attr__, [], "blur"}]]}], "foregroundStyle(.secondary)" => [{:foregroundStyle, [], [{:., [], [nil, :secondary]}]}], "layoutPriority(1)" => [{:layoutPriority, [], [1]}], "font(.caption2)" => [{:font, [], [{:., [], [nil, :caption2]}]}], "navigationTitle(\"Charts\")" => [{:navigationTitle, [], ["Charts"]}], "animation(.bouncy, value: gesture_state(:drag, .translation.width))" => [{:animation, [], [{:., [], [nil, :bouncy]}, [value: {:__gesture_state__, [], [:drag, {:., [], [nil, {:., [], [:translation, :width]}]}]}]]}], "listRowSpacing(0)" => [{:listRowSpacing, [], [0]}], "mask(mask: :mask)" => [{:mask, [], [[mask: :mask]]}], "padding(8)" => [{:padding, [], [8]}], "searchable(text: attr(\"searchText\"), prompt: \"Search for something...\")" => [{:searchable, [], [[text: {:__attr__, [], "searchText"}, prompt: "Search for something..."]]}], "aspectRatio(1.5, contentMode: .fit)" => [{:aspectRatio, [], [1.5, [contentMode: {:., [], [nil, :fit]}]]}], "scrollTargetBehavior(.viewAligned)" => [{:scrollTargetBehavior, [], [{:., [], [nil, :viewAligned]}]}], "textFieldStyle(.plain)" => [{:textFieldStyle, [], [{:., [], [nil, :plain]}]}], "stroke(.white, lineWidth: 3)" => [{:stroke, [], [{:., [], [nil, :white]}, [lineWidth: 3]]}], "contentMargins(16)" => [{:contentMargins, [], [16]}], "offset(x: gesture_state(:drag, .translation.width), y: gesture_state(:drag, .translation.height))" => [{:offset, [], [[x: {:__gesture_state__, [], [:drag, {:., [], [nil, {:., [], [:translation, :width]}]}]}, y: {:__gesture_state__, [], [:drag, {:., [], [nil, {:., [], [:translation, :height]}]}]}]]}], "lineLimit(1)" => [{:lineLimit, [], [1]}], "presentationDragIndicator(.hidden)" => [{:presentationDragIndicator, [], [{:., [], [nil, :hidden]}]}], "background(.quinary, in: .rect(cornerRadius: 8))" => [{:background, [], [{:., [], [nil, :quinary]}, [in: {:., [], [nil, {:rect, [], [[cornerRadius: 8]]}]}]]}], "font(.system(size: 10))" => [{:font, [], [{:., [], [nil, {:system, [], [[size: 10]]}]}]}], "padding(10)" => [{:padding, [], [10]}]}