{
    "sourceFile": "lib/myapp_web/router.ex",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1737485671197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1737501339321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,10 @@\n   scope \"/\", MyappWeb do\n     pipe_through :browser\n \n     live \"/\", HomeLive\n+\n+\n   end\n \n   # Other scopes may use custom stacks.\n   # scope \"/api\", MyappWeb do\n"
                },
                {
                    "date": 1737501370994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,106 @@\n     pipe_through :browser\n \n     live \"/\", HomeLive\n \n-\n+    scope \"/recipes\" do\n+      live \"/card-row\", CardRowLive, metadata: %{\n+        title: \"Card Row\",\n+        icon: \"square.stack.fill\",\n+        description: \"Auto-sized cards that snap when scrolling\",\n+        category: \"UI\"\n+      }\n+      live \"/charts\", ChartsLive, metadata: %{\n+        title: \"Charts\",\n+        icon: \"chart.xyaxis.line\",\n+        description: \"Swift Charts addon library\",\n+        category: \"Addons\"\n+      }\n+      live \"/drill-down-navigation\", DrillDownNavigationLive, metadata: %{\n+        title: \"Drill-Down Navigation\",\n+        icon: \"list.bullet.indent\",\n+        description: \"Navigation method that navigates to nested pages\",\n+        category: \"Navigation\"\n+      }\n+      live \"/gesture\", GestureLive, metadata: %{\n+        title: \"Gesture\",\n+        icon: \"hand.draw.fill\",\n+        description: \"Use `gesture_state` to create fluid interactions\",\n+        category: \"UI\"\n+      }\n+      live \"/hub-and-spoke-navigation\", HubAndSpokeNavigationLive, metadata: %{\n+        title: \"Hub & Spoke Navigation\",\n+        icon: \"arrow.up.left.and.down.right.and.arrow.up.right.and.down.left\",\n+        description: \"Navigation method that navigates to and from independent pages\",\n+        category: \"Navigation\"\n+      }\n+      live \"/maps\", MapsLive, metadata: %{\n+        title: \"Maps\",\n+        icon: \"mappin.and.ellipse\",\n+        description: \"MapKit addon library\",\n+        category: \"Addons\"\n+      }\n+      live \"/media-overview\", MediaOverviewLive, metadata: %{\n+        title: \"Media Overview\",\n+        icon: \"play.square.stack\",\n+        description: \"Apple Music/Podcasts-styled album overview\",\n+        category: \"UI\"\n+      }\n+      live \"/message-thread\", MessageThreadLive, metadata: %{\n+        title: \"Message Thread\",\n+        icon: \"message.fill\",\n+        description: \"A list of message bubbles that starts at the bottom\",\n+        category: \"UI\"\n+      }\n+      live \"/onboarding\", OnboardingLive, metadata: %{\n+        title: \"Onboarding\",\n+        icon: \"list.star\",\n+        description: \"A list of features available in the app\",\n+        category: \"UI\"\n+      }\n+      live \"/playback-bar\", PlaybackBarLive, metadata: %{\n+        title: \"Playback Bar\",\n+        icon: \"playpause.fill\",\n+        description: \"An expandable bar that shows currently playing media\",\n+        category: \"UI\"\n+      }\n+      live \"/pyramid-navigation\", PyramidNavigationLive, metadata: %{\n+        title: \"Pyramid Navigation\",\n+        icon: \"point.3.filled.connected.trianglepath.dotted\",\n+        description: \"Navigation method that allows navigation between sibling pages\",\n+        category: \"Navigation\"\n+      }\n+      live \"/scroll-automation\", ScrollAutomationLive, metadata: %{\n+        title: \"Scroll Automation\",\n+        icon: \"arrow.up.and.down.text.horizontal\",\n+        description: \"Programatically change the scroll position\",\n+        category: \"UI\"\n+      }\n+      live \"/search\", SearchLive, metadata: %{\n+        title: \"Search\",\n+        icon: \"magnifyingglass\",\n+        description: \"A search bar that sends live updates, and detects the submit button.\",\n+        category: \"UI\"\n+      }\n+      live \"/sectioned-grid\", SectionedGridLive, metadata: %{\n+        title: \"Sectioned Grid\",\n+        icon: \"square.grid.3x3.fill\",\n+        description: \"A grid of items divided into pinned section headers\",\n+        category: \"UI\"\n+      }\n+      live \"/tabs\", TabsLive, metadata: %{\n+        title: \"Tabs\",\n+        icon: \"rectangle.split.3x1.fill\",\n+        description: \"Navigation method that uses a system tab bar\",\n+        category: \"Navigation\"\n+      }\n+      live \"/video\", VideoLive, metadata: %{\n+        title: \"Video\",\n+        icon: \"play.rectangle.fill\",\n+        description: \"AVKit addon library for video playback\",\n+        category: \"Addons\"\n+      }\n+    end\n   end\n \n   # Other scopes may use custom stacks.\n   # scope \"/api\", MyappWeb do\n"
                }
            ],
            "date": 1737485671197,
            "name": "Commit-0",
            "content": "defmodule MyappWeb.Router do\n  use MyappWeb, :router\n\n  pipeline :browser do\n    plug :accepts, [\n      \"html\",\n      \"swiftui\"\n    ]\n\n    plug :fetch_session\n    plug :fetch_live_flash\n\n    plug :put_root_layout,\n      html: {MyappWeb.Layouts, :root},\n      swiftui: {MyappWeb.Layouts.SwiftUI, :root}\n\n    plug :protect_from_forgery\n    plug :put_secure_browser_headers\n  end\n\n  pipeline :api do\n    plug :accepts, [\"json\"]\n  end\n\n  scope \"/\", MyappWeb do\n    pipe_through :browser\n\n    live \"/\", HomeLive\n  end\n\n  # Other scopes may use custom stacks.\n  # scope \"/api\", MyappWeb do\n  #   pipe_through :api\n  # end\n\n  # Enable LiveDashboard and Swoosh mailbox preview in development\n  if Application.compile_env(:myapp, :dev_routes) do\n    # If you want to use the LiveDashboard in production, you should put\n    # it behind authentication and allow only admins to access it.\n    # If your application does not have an admins-only section yet,\n    # you can use Plug.BasicAuth to set up some basic authentication\n    # as long as you are also using SSL (which you should anyway).\n    import Phoenix.LiveDashboard.Router\n\n    scope \"/dev\" do\n      pipe_through :browser\n\n      live_dashboard \"/dashboard\", metrics: MyappWeb.Telemetry\n      forward \"/mailbox\", Plug.Swoosh.MailboxPreview\n    end\n  end\nend\n"
        }
    ]
}