{
    "sourceFile": "config/dev.exs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1737486792305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1737486792305,
            "name": "Commit-0",
            "content": "import Config\n\n# Configure your database\nconfig :myapp, Myapp.Repo,\n  username: \"postgres\",\n  password: \"postgres\",\n  hostname: \"localhost\",\n  database: \"myapp_dev\",\n  stacktrace: true,\n  show_sensitive_data_on_connection_error: true,\n  pool_size: 10\n\n# For development, we disable any cache and enable\n# debugging and code reloading.\n#\n# The watchers configuration can be used to run external\n# watchers to your application. For example, we can use it\n# to bundle .js and .css sources.\nconfig :myapp, MyappWeb.Endpoint,\n  # Binding to loopback ipv4 address prevents access from other machines.\n  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.\n  http: [ip: {0, 0, 0, 0}, port: 4000],\n  check_origin: false,\n  code_reloader: true,\n  debug_errors: true,\n  secret_key_base: \"en+2mpbTcEN86rBp1iHDLnXhgTEvwU4rBokKtP9pHwLeYvFVf1guRP0PPfRqLBAi\",\n  watchers: [\n    esbuild: {Esbuild, :install_and_run, [:myapp, ~w(--sourcemap=inline --watch)]},\n    tailwind: {Tailwind, :install_and_run, [:myapp, ~w(--watch)]}\n  ]\n\n# ## SSL Support\n#\n# In order to use HTTPS in development, a self-signed\n# certificate can be generated by running the following\n# Mix task:\n#\n#     mix phx.gen.cert\n#\n# Run `mix help phx.gen.cert` for more information.\n#\n# The `http:` config above can be replaced with:\n#\n#     https: [\n#       port: 4001,\n#       cipher_suite: :strong,\n#       keyfile: \"priv/cert/selfsigned_key.pem\",\n#       certfile: \"priv/cert/selfsigned.pem\"\n#     ],\n#\n# If desired, both `http:` and `https:` keys can be\n# configured to run both http and https servers on\n# different ports.\n\n# Watch static and templates for browser reloading.\nconfig :myapp, MyappWeb.Endpoint,\n  live_reload: [\n    patterns: [\n      ~r\"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$\",\n      ~r\"priv/gettext/.*(po)$\",\n      ~r\"lib/myapp_web/(controllers|live|components)/.*(ex|heex)$\",\n      ~r\"lib/myapp_web/(live|components)/.*neex$\",\n      ~r\"lib/myapp_web/styles/.*ex$\",\n      ~r\"priv/static/*.styles$\"\n    ]\n  ]\n\n# Enable dev routes for dashboard and mailbox\nconfig :myapp, dev_routes: true\n\n# Do not include metadata nor timestamps in development logs\nconfig :logger, :console, format: \"[$level] $message\\n\"\n\n# Set a higher stacktrace during development. Avoid configuring such\n# in production as building large stacktraces may be expensive.\nconfig :phoenix, :stacktrace_depth, 20\n\n# Initialize plugs at runtime for faster development compilation\nconfig :phoenix, :plug_init_mode, :runtime\n\nconfig :phoenix_live_view,\n  # Include HEEx debug annotations as HTML comments in rendered markup\n  debug_heex_annotations: true,\n  # Enable helpful, but potentially expensive runtime checks\n  enable_expensive_runtime_checks: true\n\n# Disable swoosh api client as it is only required for production adapters.\nconfig :swoosh, :api_client, false\n\nconfig :live_view_native_stylesheet,\n  annotations: true,\n  pretty: true\n"
        }
    ]
}